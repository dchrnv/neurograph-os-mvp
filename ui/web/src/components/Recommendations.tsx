interface Recommendation {
  id: string
  type: 'optimization' | 'warning' | 'tip'
  title: string
  description: string
  action?: string
  onApply?: () => void
}

interface RecommendationsProps {
  currentValues: number[]
  currentProfile: string
}

export default function Recommendations({ currentValues, currentProfile }: RecommendationsProps) {
  const generateRecommendations = (): Recommendation[] => {
    const recommendations: Recommendation[] = []

    const avgValue = currentValues.reduce((a, b) => a + b, 0) / currentValues.length
    const maxValue = Math.max(...currentValues)
    const minValue = Math.min(...currentValues.filter(v => v > 0))

    // Check for imbalanced configuration
    if (maxValue / minValue > 10) {
      recommendations.push({
        id: 'imbalance',
        type: 'warning',
        title: '–ù–µ—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è',
        description: `–†–∞–∑–±—Ä–æ—Å –∑–Ω–∞—á–µ–Ω–∏–π —Å–ª–∏—à–∫–æ–º –≤–µ–ª–∏–∫ (${minValue.toFixed(1)} - ${maxValue.toFixed(1)}). –≠—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –Ω–µ—Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–µ.`,
        action: '–ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è'
      })
    }

    // Profile-specific recommendations
    if (currentProfile === 'creative' && avgValue < 10) {
      recommendations.push({
        id: 'creative-low',
        type: 'tip',
        title: '–ù–∏–∑–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è Creative –ø—Ä–æ—Ñ–∏–ª—è',
        description: 'Creative –ø—Ä–æ—Ñ–∏–ª—å –æ–±—ã—á–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ Abstract –∏ Cognitive –∏–∑–º–µ—Ä–µ–Ω–∏–π.',
        action: '–£–≤–µ–ª–∏—á–∏—Ç—å –∫–ª—é—á–µ–≤—ã–µ –∏–∑–º–µ—Ä–µ–Ω–∏—è'
      })
    }

    if (currentProfile === 'analyzer' && currentValues[7] < 15) {
      recommendations.push({
        id: 'analyzer-abstract',
        type: 'optimization',
        title: '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –¥–ª—è Analyzer',
        description: 'Analyzer –ø—Ä–æ—Ñ–∏–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç –ª—É—á—à–µ —Å –≤—ã—Å–æ–∫–∏–º Abstract –∑–Ω–∞—á–µ–Ω–∏–µ–º (15-20) –¥–ª—è —Å—Ç—Ä–æ–≥–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–∏.',
        action: '–£–≤–µ–ª–∏—á–∏—Ç—å Abstract –¥–æ 20'
      })
    }

    // General optimizations
    if (currentValues[4] > 25) { // Cognitive
      recommendations.push({
        id: 'cognitive-high',
        type: 'warning',
        title: '–í—ã—Å–æ–∫–∞—è –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞',
        description: 'Cognitive dimension > 25 –º–æ–∂–µ—Ç –∑–∞–º–µ–¥–ª–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É. –°–Ω–∏–∑—å—Ç–µ –¥–æ 15-20 –¥–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.',
        action: '–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å Cognitive'
      })
    }

    // Add helpful tips
    if (recommendations.length === 0) {
      recommendations.push({
        id: 'optimal',
        type: 'tip',
        title: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–∞',
        description: '–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö –¥–∏–∞–ø–∞–∑–æ–Ω–∞—Ö. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞—Ä–∞–Ω—Ç–∏–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π.',
        action: null
      })
    }

    return recommendations
  }

  const recommendations = generateRecommendations()

  return (
    <div className="recommendations-panel">
      <div className="recommendations-header">
        <h3>üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h3>
      </div>
      <div className="recommendations-list">
        {recommendations.map((rec) => (
          <div key={rec.id} className={`recommendation-item ${rec.type}`}>
            <div className="recommendation-icon">
              {rec.type === 'optimization' ? '‚ö°' : rec.type === 'warning' ? '‚ö†Ô∏è' : 'üí°'}
            </div>
            <div className="recommendation-content">
              <h4>{rec.title}</h4>
              <p>{rec.description}</p>
              {rec.action && rec.onApply && (
                <button className="btn-apply-recommendation" onClick={rec.onApply}>
                  {rec.action}
                </button>
              )}
            </div>
          </div>
        ))}
      </div>
    </div>
  )
}
